[
    {
        "id": "4f5b463efe029f84",
        "type": "group",
        "z": "15669bac1d63a856",
        "name": "Dynamic ESS",
        "style": {
            "label": true
        },
        "nodes": [
            "74fc8e63bf9bbd47",
            "0a258a4a88409834",
            "04be7571633ea6bd",
            "d653e0ee49164bd1",
            "b7244f77487893f6",
            "f3819fb5aa20061c"
        ],
        "x": 774,
        "y": 59,
        "w": 372,
        "h": 162
    },
    {
        "id": "74fc8e63bf9bbd47",
        "type": "victron-dynamic-ess",
        "z": "15669bac1d63a856",
        "g": "4f5b463efe029f84",
        "name": "",
        "vrm_id": "",
        "vrmtoken": "",
        "country": "nl",
        "b_max": "14.5",
        "fb_max": "4.5",
        "tb_max": "6.5",
        "fg_max": "2.5",
        "tg_max": "2.5",
        "b_cost": "0.03",
        "buy_price_formula": "(p+0.03+0.13)*1.21",
        "sell_price_formula": "(p-0.03+0.13)*1.21",
        "feed_in_possible": true,
        "feed_in_control_on": true,
        "verbose": true,
        "x": 900,
        "y": 160,
        "wires": [
            [
                "0a258a4a88409834"
            ],
            [
                "04be7571633ea6bd"
            ],
            [
                "d653e0ee49164bd1"
            ],
            [
                "b7244f77487893f6"
            ]
        ]
    },
    {
        "id": "0a258a4a88409834",
        "type": "link out",
        "z": "15669bac1d63a856",
        "g": "4f5b463efe029f84",
        "name": "schedule 0 - current hour",
        "mode": "link",
        "links": [
            "d75fe820bd4079fd",
            "8d723ea6a3f644bc",
            "7cd005b8964ebe1c"
        ],
        "x": 1055,
        "y": 100,
        "wires": []
    },
    {
        "id": "04be7571633ea6bd",
        "type": "link out",
        "z": "15669bac1d63a856",
        "g": "4f5b463efe029f84",
        "name": "schedule 1 - current hour +1",
        "mode": "link",
        "links": [
            "7e361835e40e9612"
        ],
        "x": 1105,
        "y": 120,
        "wires": []
    },
    {
        "id": "d653e0ee49164bd1",
        "type": "link out",
        "z": "15669bac1d63a856",
        "g": "4f5b463efe029f84",
        "name": "schedule 2 - current hour +2",
        "mode": "link",
        "links": [
            "85d9b1f2d1083440"
        ],
        "x": 1055,
        "y": 160,
        "wires": []
    },
    {
        "id": "b7244f77487893f6",
        "type": "link out",
        "z": "15669bac1d63a856",
        "g": "4f5b463efe029f84",
        "name": "schedule 3 - current hour +3",
        "mode": "link",
        "links": [
            "67ab1cc124f6edbc"
        ],
        "x": 1105,
        "y": 180,
        "wires": []
    },
    {
        "id": "f3819fb5aa20061c",
        "type": "inject",
        "z": "15669bac1d63a856",
        "g": "4f5b463efe029f84",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1200",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 890,
        "y": 100,
        "wires": [
            [
                "74fc8e63bf9bbd47"
            ]
        ]
    },
    {
        "id": "cec1e66ec533743a",
        "type": "group",
        "z": "15669bac1d63a856",
        "name": "Dynamic ESS activation",
        "style": {
            "label": true
        },
        "nodes": [
            "aca5786b0db9a892",
            "353bb3cea1947ff3",
            "55495378d8a4e89c",
            "afdb5b686f86bb57",
            "0d80c2fbc7d8094b"
        ],
        "x": 54,
        "y": 59,
        "w": 712,
        "h": 162
    },
    {
        "id": "aca5786b0db9a892",
        "type": "inject",
        "z": "15669bac1d63a856",
        "g": "cec1e66ec533743a",
        "name": "Disable Dynamic ESS (mode: off)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 230,
        "y": 140,
        "wires": [
            [
                "353bb3cea1947ff3"
            ]
        ]
    },
    {
        "id": "353bb3cea1947ff3",
        "type": "victron-output-custom",
        "z": "15669bac1d63a856",
        "g": "cec1e66ec533743a",
        "service": "com.victronenergy.settings",
        "path": "/Settings/DynamicEss/Mode",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings"
        },
        "pathObj": {
            "path": "/Settings/DynamicEss/Mode",
            "name": "/Settings/DynamicEss/Mode",
            "type": "number"
        },
        "name": "Dynamic ESS mode",
        "onlyChanges": false,
        "x": 640,
        "y": 100,
        "wires": []
    },
    {
        "id": "55495378d8a4e89c",
        "type": "inject",
        "z": "15669bac1d63a856",
        "g": "cec1e66ec533743a",
        "name": "Enable Dynamic ESS (mode: Node-RED)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "4",
        "payloadType": "num",
        "x": 260,
        "y": 100,
        "wires": [
            [
                "353bb3cea1947ff3"
            ]
        ]
    },
    {
        "id": "afdb5b686f86bb57",
        "type": "victron-input-custom",
        "z": "15669bac1d63a856",
        "g": "cec1e66ec533743a",
        "service": "com.victronenergy.settings",
        "path": "/Settings/DynamicEss/Mode",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings"
        },
        "pathObj": {
            "path": "/Settings/DynamicEss/Mode",
            "name": "/Settings/DynamicEss/Mode",
            "type": "number"
        },
        "name": "",
        "onlyChanges": true,
        "x": 290,
        "y": 180,
        "wires": [
            [
                "0d80c2fbc7d8094b"
            ]
        ]
    },
    {
        "id": "0d80c2fbc7d8094b",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "cec1e66ec533743a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dess_mode",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "1004b1568061f0ed",
        "type": "group",
        "z": "15669bac1d63a856",
        "name": "/dess page",
        "style": {
            "label": true
        },
        "nodes": [
            "93d84929a7e8f215",
            "3fecddb497bc5365",
            "928878cbd3fac1e6",
            "f695815874773519",
            "557e436c8a1b3fe5",
            "adba20b403a6eb54",
            "7c4a51c3a3bb9f4f",
            "71e94c59bd88518d",
            "f9e95524651ecaa6",
            "2297338ce02e1686"
        ],
        "x": 54,
        "y": 239,
        "w": 1092,
        "h": 162
    },
    {
        "id": "93d84929a7e8f215",
        "type": "http in",
        "z": "15669bac1d63a856",
        "g": "1004b1568061f0ed",
        "name": "Dynamic ESS (/dess)",
        "url": "/dess",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 280,
        "wires": [
            [
                "71e94c59bd88518d"
            ]
        ]
    },
    {
        "id": "3fecddb497bc5365",
        "type": "http in",
        "z": "15669bac1d63a856",
        "g": "1004b1568061f0ed",
        "name": "Stylesheet DESS",
        "url": "/dess/style.css",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 360,
        "wires": [
            [
                "928878cbd3fac1e6"
            ]
        ]
    },
    {
        "id": "928878cbd3fac1e6",
        "type": "template",
        "z": "15669bac1d63a856",
        "g": "1004b1568061f0ed",
        "name": "stylesheet",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "body {\n  background-color: #fff;\n  padding-left: 5%;\n  padding-right: 5%;\n  font-family: Tahoma, Verdana, Arial, sans-serif;\n}\nh1 {\n  color: white;\n}\np {\n  color: black;\n}\n\n.dess-table {\n    border-collapse: collapse;\n    margin: 25px 0;\n    font-size: 0.9em;\n    font-family: sans-serif;\n    min-width: 400px;\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);\n}\n\n.dess-table thead tr {\n    background-color: #009879;\n    color: #ffffff;\n    text-align: left;\n}\n\n.dess-table th,\n.dess-table td {\n    padding: 12px 15px;\n}",
        "output": "str",
        "x": 560,
        "y": 360,
        "wires": [
            [
                "f695815874773519"
            ]
        ]
    },
    {
        "id": "f695815874773519",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "1004b1568061f0ed",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "text/css",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 360,
        "wires": [
            [
                "7c4a51c3a3bb9f4f"
            ]
        ]
    },
    {
        "id": "557e436c8a1b3fe5",
        "type": "http in",
        "z": "15669bac1d63a856",
        "g": "1004b1568061f0ed",
        "name": "Javascript DESS",
        "url": "/dess/index.js",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 320,
        "wires": [
            [
                "2297338ce02e1686"
            ]
        ]
    },
    {
        "id": "adba20b403a6eb54",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "1004b1568061f0ed",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "text/javascript",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 320,
        "wires": [
            [
                "7c4a51c3a3bb9f4f"
            ]
        ]
    },
    {
        "id": "7c4a51c3a3bb9f4f",
        "type": "http response",
        "z": "15669bac1d63a856",
        "g": "1004b1568061f0ed",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1070,
        "y": 320,
        "wires": []
    },
    {
        "id": "71e94c59bd88518d",
        "type": "function",
        "z": "15669bac1d63a856",
        "g": "1004b1568061f0ed",
        "name": "prepare dess variables",
        "func": "let dess = flow.get('dess')     \n\nmsg.lastValidUpdate = new Date(flow.get('lastValidUpdate')).toLocaleString()\nlet date = new Date()\nmsg.hour = date.getHours()\nmsg.gsmm = dess.output.gsmm[msg.hour]\nmsg.feed_in = dess.output.feed_in[msg.hour]\nmsg.idle_b = dess.output.idle_b[msg.hour]\n\nmsg.dess_mode = flow.get('dess_mode')\nmsg.dess_mode_text = ['Off', 'Auto', 'Buy', 'Sell', 'Node-RED'][msg.dess_mode]\nif (Object.keys(dess.schedule).length == 24) {\n    msg.dess_hours = 24\n} else {\n    msg.dess_hours = 48\n}\n\nlet restrictions = {\n 0 : \"No restrictions\",\n 1 : \"No exporting from battery to grid\",\n 2 : \"No importing from grid to battery\"\n}\n\nmsg.estimations = {\n    payload: {\n        \"datasets\": [\n            {\n                label: 'Consumption',\n                type: 'line',\n                data: Object.values(dess.output.C).slice(0, msg.dess_hours).map(x => x.toFixed(3)),\n                borderColor: \"#FA716F\",\n                fill: false,\n                stepped: 'left',\n                pointRadius: 1,\n                borderWidth: 1\n            },\n            {\n                label: 'Battery',\n                type: 'line',\n                data: Object.values(dess.output.B).slice(0, msg.dess_hours).map(x => x.toFixed(3)),\n                borderColor: \"#4790D0\",\n                fill: false,\n                stepped: 'left',\n                pointRadius: 1,\n                borderWidth: 1\n            },\n            {\n                label: 'PV yield',\n                type: 'line',\n                data: Object.values(dess.output.PV).slice(0, msg.dess_hours).map(x => x.toFixed(3)),\n                borderColor: \"#F7AB3E\",\n                backgroundColor: \"#f8aa3dAA\",\n                fill: true,\n                stepped: 'left',\n                pointRadius: 1,\n                borderWidth: 1\n            }\n        ],\n        \"labels\": Object.keys(dess.schedule).slice(0, msg.dess_hours),\n        \"B_max\": dess.options.b_max\n    }\n}\n\nmsg.schedule = {\n    payload: {\n        \"datasets\": [\n            {\n                label: \"Grid Usage\",\n                data: Object.values(dess.output.g).slice(0, msg.dess_hours).map(x => x.toFixed(3)),\n                borderColor: \"#FA716F\",\n                backgroundColor: \"#FA716F\",\n                fill: true\n            },\n            {\n                label: \"Battery usage\",\n                data: Object.values(dess.output.b).slice(0, msg.dess_hours).map(x => x.toFixed(3)),\n                borderColor: \"#4790D0\",\n                backgroundColor: \"#4790D0\",\n                fill: true\n            }],\n        \"labels\": Object.keys(dess.schedule).slice(0, msg.dess_hours)\n    }\n}\n\nmsg.dayaheadprices = {\n    payload: {\n        \"datasets\": [\n            {\n                label: \"Buy Price\",\n                type: 'line',\n                data: Object.values(dess.output.p_b).slice(0, msg.dess_hours).map(x => x.toFixed(3)),\n                borderColor: \"#FA716F\",\n                backgroundColor: \"#FA716F\",\n                fill: false,\n                stepped: 'left',\n                pointRadius: 1,\n                borderWidth: 1\n            }, {\n                label: \"Sell Price\",\n                type: 'line',\n                data: Object.values(dess.output.p_s).slice(0, msg.dess_hours).map(x => x.toFixed(3)),\n                borderColor: \"#8BC964\",\n                backgroundColor: \"#8BC964\",\n                fill: false,\n                stepped: 'left',\n                pointRadius: 1,\n                borderWidth: 1\n            },],\n        \"labels\": Object.keys(dess.schedule).slice(0, msg.dess_hours)\n    }\n}\n\nmsg.costs = {\n    payload: {\n        \"datasets\": [\n            {\n                label: \"Grid costs\",\n                data: Object.values(dess.output.g_cost).slice(0, msg.dess_hours).map(x => x.toFixed(3)),\n                borderColor: \"#FA716F\",\n                backgroundColor: \"#FA716F\",\n                fill: true\n            },\n            {\n                label: \"Battery costs\",\n                data: Object.values(dess.output.b_cost).slice(0, msg.dess_hours).map(x => x.toFixed(3)),\n                borderColor: \"#4790D0\",\n                backgroundColor: \"#4790D0\",\n                fill: true\n            }],\n        \"labels\": Object.keys(dess.schedule).slice(0, msg.dess_hours)\n    }\n}\n\nlet b = Object.values(dess.output.b).slice(0, msg.dess_hours).map(x => x.toFixed(3));\nlet g = Object.values(dess.output.g).slice(0, msg.dess_hours).map(x => x.toFixed(3));\nlet C = Object.values(dess.output.C).slice(0, msg.dess_hours).map(x => x.toFixed(3));\nlet PV = Object.values(dess.output.PV).slice(0, msg.dess_hours).map(x => x.toFixed(3));\nlet n = C.map((c, i) => PV[i] - c);\n\nlet to_b = b.map(x => { if (x < 0) { return -x } else { return 0 } });\nlet from_b = b.map(x => { if (x > 0) { return x } else { return 0 } });\nlet to_g = g.map(x => { if (x < 0) { return -x } else { return 0 } });\nlet from_g = g.map(x => { if (x > 0) { return x } else { return 0 } });\n\nlet met_need = C.map((c, i) => Math.min(c, PV[i]));\n\nlet from_g_to_b = []\nlet from_b_to_g = []\n\nfor (let i = 0; i <= (msg.dess_hours - 1); i++) {\n    if (Math.sign(b[i]) * Math.sign(g[i]) >= 0) {\n        from_b_to_g.push(0)\n        from_g_to_b.push(0)\n    } else if (Math.sign(b[i]) == 1 && Math.sign(n[i]) >= 0) {\n        from_b_to_g.push(b[i])\n        from_g_to_b.push(0)\n    } else if (Math.sign(b[i]) == 1 && Math.sign(n[i]) == -1) {\n        from_b_to_g.push(-g[i])\n        from_g_to_b.push(0)\n    } else if (Math.sign(g[i]) == 1 && Math.sign(n[i]) >= 0) {\n        from_b_to_g.push(0)\n        from_g_to_b.push(g[i])\n    } else if (Math.sign(g[i]) == 1 && Math.sign(n[i]) == -1) {\n        from_b_to_g.push(0)\n        from_g_to_b.push(-b[i])\n    }\n}\n\nfrom_g = from_g.map((x, i) => (x - from_g_to_b[i]).toFixed(3))\nfrom_b = from_b.map((x, i) => (x - from_b_to_g[i]).toFixed(3))\nto_b = to_b.map((x, i) => (x - from_g_to_b[i]).toFixed(3))\nto_g = to_g.map((x, i) => (x - from_b_to_g[i]).toFixed(3))\n\nmsg.energy = {\n    payload: {\n        \"datasets\": [\n            {\n                label: \"Consumption\",\n                type: 'line',\n                data: C,\n                borderColor: \"#1066B1\",\n                backgroundColor: \"#1066B1\",\n                fill: false,\n                stepped: 'middle',\n                borderWidth: 1\n            },\n            {\n                label: \"PV Yield\",\n                type: 'line',\n                data: PV,\n                borderColor: \"#F7AB3E\",\n                backgroundColor: \"#F7AB3E\",\n                fill: false,\n                stepped: 'middle',\n                borderWidth: 1\n            },\n            {\n                label: \"\",\n                type: 'bar',\n                data: met_need,\n                legend: false,\n                borderColor: \"#FFFFFF00\",\n                backgroundColor: \"#FFFFFF00\",\n                fill: true,\n                stack: 1,\n            },\n            {\n                label: \"From Grid\",\n                type: 'bar',\n                data: from_g,\n                borderColor: \"#FA716F\",\n                backgroundColor: \"#FA716F\",\n                barPercentage: 0.95,\n                fill: true,\n                stack: 1,\n            },\n            {\n                label: \"To Grid\",\n                type: 'bar',\n                data: to_g,\n                borderColor: \"#8BC964\",\n                backgroundColor: \"#8BC964\",\n                barPercentage: 0.95,\n                fill: true,\n                stack: 1,\n            },\n            {\n                label: \"From Battery\",\n                type: 'bar',\n                data: from_b,\n                borderColor: \"#4790D0\",\n                backgroundColor: \"#4790D0\",\n                barPercentage: 0.95,\n                fill: true,\n                stack: 1,\n            },\n            {\n                label: \"To Battery\",\n                type: 'bar',\n                data: to_b,\n                borderColor: \"#9683EC\",\n                backgroundColor: \"#9683EC\",\n                barPercentage: 0.95,\n                fill: true,\n                stack: 1,\n            },\n            {\n                label: \"From Battery to Grid\",\n                type: 'bar',\n                data: from_b_to_g,\n                borderColor: \"#4790D0\",\n                backgroundColor: \"#8BC964\",\n                borderWidth: 4,\n                barPercentage: 0.95,\n                fill: true,\n                stack: 1,\n            },\n            {\n                label: \"From Grid to Battery\",\n                type: 'bar',\n                data: from_g_to_b,\n                borderColor: \"#FA716F\",\n                borderWidth: 4,\n                backgroundColor: \"#9683EC\",\n                barPercentage: 0.95,\n                fill: true,\n                stack: 1,\n            },],\n        \"labels\": Object.keys(dess.schedule).slice(0, msg.dess_hours)\n    }\n}\n\nmsg.table = []\nconst currentDateTime = new Date()\ncurrentDateTime.setMinutes(0, 0, 0)\nconst unixTimestamp = Math.floor(currentDateTime.getTime() / 1000)\nlet currentHour = currentDateTime.getHours()\nfor (let schedule = 0; schedule <= 3; schedule++) {\n    let schedulePick = currentHour + schedule\n    if (schedulePick > Object.keys(dess.schedule).length) {\n        schedulePick -= 24\n    }\n    let scheduledDate = currentDateTime;\n    scheduledDate.setHours(currentHour + schedule)\n    msg.table.push({\n        soc: Number((dess.output.SOC[schedulePick]).toFixed(1)),\n        feed_in: dess.output.feed_in[schedulePick],\n        duration: 3600,\n        start: scheduledDate.toLocaleString(),\n        restrictions: restrictions[Number((dess.output.restrictions ? dess.output.restrictions[schedulePick] || 0 : 0))]\n\n    })\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 280,
        "wires": [
            [
                "f9e95524651ecaa6"
            ]
        ]
    },
    {
        "id": "f9e95524651ecaa6",
        "type": "template",
        "z": "15669bac1d63a856",
        "g": "1004b1568061f0ed",
        "name": "html page",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"refresh\" content=\"60\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Dynamic ESS</title>\n        <link rel=\"stylesheet\" href=\"/dess/style.css\">\n  </head>\n  <body>\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n    <script src=\"/dess/index.js\"></script>\n  \n  <h2>Dynamic ESS - {{ flow.dess.options.vrm_id }} ({{ flow.dess.options.country }}) - {{ dess_mode_text }}</h2>\n\n<div class=\"canvas-container\">\n  <div class=\"canvas-pair\">\n    <div id=\"ca\" style=\"height: 30vh; width: 45%;display:inline-block;\">\n      <canvas id=\"estimations\"></canvas>\n    </div>\n\n    <div id=\"cb\" style=\"height: 30vh; width: 45%;margin-left:5%;display:inline-block;\">\n      <canvas id=\"schedule\"></canvas>\n    </div>\n  </div>\n  <div class=\"canvas-pair\">\n    <div id=\"cc\" style=\"height: 30vh; width: 45%;display:inline-block;\">\n      <canvas id=\"dayaheadprices\"></canvas>\n    </div>\n\n    <div id=\"cd\" style=\"height: 30vh; width: 45%;margin-left:5%;display:inline-block;\">\n      <canvas id=\"costs\"></canvas>\n    </div>\n  </div>\n</div>\n\n<div id=\"ce\" style=\"height: 30vh;\">\n  <canvas id=\"energy\"></canvas>\n</div>\n\n<script>\n    const estimationschart = new Chart(\n    document.getElementById('estimations'),\n      {\n        type: 'bar',\n      data: {\n        labels: [{{estimations.payload.labels}}],\n        datasets: [\n            {{#estimations.payload.datasets}}\n            {\n                label: '{{label}}',\n                type: '{{type}}',\n                data: [{{data}}],\n                borderColor: '{{borderColor}}',\n                {{#backgroundColor}}\n                backgroundColor: '{{backgroundColor}}',\n                {{/backgroundColor}}\n                fill: {{fill}},\n                stepped: '{{stepped}}',\n                pointRadius: {{pointRadius}},\n                borderWidth: {{borderWidth}}\n            },\n            {{/estimations.payload.datasets}}\n        ]\n      },\n        options: {\n          maintainAspectRatio: false,\n          title: {\n            display: true,\n            text: ''\n          },\n          legend: {\n            position: 'top',\n            display: true\n          },\n          interaction: {\n            intersect: false,\n            mode: 'index',\n          },      \n          scales: {\n              y: {\n                  beginAtZero: true,\n                  title: {\n                      display: true,\n                      text: \"Energy in kWh\"\n                  }\n              }\n          },\n          plugins: {\n              arbitraryLine: {\n                  pastBackgroundColor: '#eee',\n                  nowBackgroundColor: '#ddd',\n                  offset: 1,\n                  hours: {{ dess_hours }}\n              },\n              title: {\n                  display: true,\n                  text: \"Overview graph\"\n              },\n              subtitle: {\n                  display: true,\n                  text: \"\"\n              },\n              tooltip: {\n                  callbacks: {\n                      label: function(ctx) {\n                let label = ctx.dataset.label || \"\";\n                if (label === 'Battery') {\n                    label += ': ';\n                    label += ctx.parsed.y.toFixed(2)\n                    label += ' ('\n                    label += ((ctx.parsed.y / {{ flow.dess.options.b_max}} ) * 100).toFixed(1)\n                    label += '%)'\n                }\n                else {\n                    label += ': ' + ctx.parsed.y.toFixed(2)\n                }\n                return label;\n                      }\n                  }\n              }\n          }\n        },\n        plugins: [arbitraryLine]\n      }\n    );\n\n  const schedulechart = new Chart(\n    document.getElementById('schedule'),\n    {\n      type: 'bar',\n      data: {\n        labels: [{{schedule.payload.labels}}],\n        datasets: [\n            {{#schedule.payload.datasets}}\n            {\n                label: '{{label}}',\n                data: [{{data}}],\n                borderColor: '{{borderColor}}',\n                backgroundColor: '{{backgroundColor}}',\n                fill: {{fill}},\n            },\n            {{/schedule.payload.datasets}}\n        ]\n      },\n      options: {\n        maintainAspectRatio: false,\n        title: {\n          display: true,\n          text: ''\n        },\n        legend: {\n          position: 'top',\n          display: true\n        },\n        interaction: {\n          intersect: false,\n          mode: 'index',\n        },      \n        scales: {\n            y: {\n                beginAtZero: true,\n                title: {\n                    display: true,\n                    text: \"Energy in kWh\"\n                }\n            }\n        },\n        plugins: {\n            arbitraryLine: {\n                pastBackgroundColor: '#EEEEEE',\n                nowBackgroundColor: '#DDDDDD',\n                hours: {{ dess_hours }}\n            },\n            title: {\n                display: true,\n                text: \"Schedule graph\"\n            },\n            subtitle: {\n                display: true,\n                text: \"Positive values represent the energy used from the item (opposite for negatives).\"\n            }\n        }\n      },\n      plugins: [arbitraryLine]\n    }\n  );\n\n  const dapchart = new Chart(\n    document.getElementById('dayaheadprices'),\n    {\n      type: 'bar',\n      data: {\n        labels: [{{dayaheadprices.payload.labels}}],\n        datasets: [\n            {{#dayaheadprices.payload.datasets}}\n            {\n                label: '{{label}}',\n                type: '{{type}}',\n                data: [{{data}}],\n                borderColor: '{{borderColor}}',\n                backgroundColor: '{{backgroundColor}}',\n                fill: {{fill}},\n                stepped: '{{stepped}}',\n                pointRadius: {{pointRadius}},\n                borderWidth: {{borderWidth}}\n            },\n            {{/dayaheadprices.payload.datasets}}\n        ]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        title: {\n          display: true,\n          text: ''\n        },\n        legend: {\n          position: 'top',\n          display: true\n        },\n        interaction: {\n          intersect: false,\n          mode: 'index',\n        },\n        scales: {\n            y: {\n                beginAtZero: true,\n                title: {\n                    display: true,\n                    text: \"Price in €/kWh\"\n                }\n            }\n        },\n        plugins: {\n            arbitraryLine: {\n                pastBackgroundColor: '#EEEEEE',\n                nowBackgroundColor: '#DDDDDD',\n                offset: 1,\n                hours: {{ dess_hours }}\n            },\n            title: {\n                display: true,\n                text: \"Price graph\"\n            },\n            subtitle: {\n                display: true,\n                text: \"Buy & Sell prices take the provider fee, energy tax and VAT into account.\"\n            }\n        }\n      },\n      plugins: [arbitraryLine]\n    }\n  );\n\n  const ucchart = new Chart(\n    document.getElementById('costs'),\n    {\n      type: 'bar',\n      data: {\n        labels: [{{costs.payload.labels}}],\n        datasets: [\n            {{#costs.payload.datasets}}\n            {\n                label: '{{label}}',\n                data: [{{data}}],\n                borderColor: '{{borderColor}}',\n                backgroundColor: '{{backgroundColor}}',\n                fill: {{fill}},\n            },\n            {{/costs.payload.datasets}}\n        ]\n      },\n      options: {\n        maintainAspectRatio: false,\n        title: {\n          display: true,\n          text: ''\n        },\n        legend: {\n          position: 'top',\n          display: true\n        },\n        interaction: {\n          intersect: false,\n          mode: 'index',\n        },      \n        scales: {\n            y: {\n                beginAtZero: true,\n                title: {\n                    display: true,\n                    text: \"Cost in €\"\n                }\n            }\n        },\n        plugins: {\n            arbitraryLine: {\n                pastBackgroundColor: '#EEEEEE',\n                nowBackgroundColor: '#DDDDDD',\n                hours: {{ dess_hours }}\n            },\n            title: {\n                display: true,\n                text: \"Costs graph\"\n            }\n        }\n      },\n      plugins: [arbitraryLine]\n    }\n  );\n\n  const enchart = new Chart(\n    document.getElementById('energy'),\n    {\n      type: 'bar',\n      data: {\n        labels: [{{energy.payload.labels}}],\n        datasets: [\n            {{#energy.payload.datasets}}\n            {\n                label: '{{label}}',\n                type: '{{type}}',\n                data: [{{data}}],\n                borderColor: '{{borderColor}}',\n                backgroundColor: '{{backgroundColor}}',\n                fill: {{fill}},\n                stepped: '{{stepped}}',\n                {{#pointStyle}}\n                pointStyle: {{pointStyle}},\n                {{/pointStyle}}\n                {{#borderWidth}}\n                borderWidth: {{borderWidth}},\n                {{/borderWidth}}\n                {{#stack}}\n                stack: {{stack}},\n                {{/stack}}\n            },\n            {{/energy.payload.datasets}}\n        ]\n      },\n      options: {\n        elements: {\n            point:{\n                radius: 0\n            }\n        },\n        maintainAspectRatio: false,\n        title: {\n          display: true,\n          text: ''\n        },\n        legend: {\n          position: 'top',\n          display: true,\n          labels: {\n              filter: function(item, chart) {\n                return !item.text.includes(\"DISCARD\");\n              }\n          }\n        },\n        interaction: {\n          intersect: false,\n          mode: 'index',\n        },\n        plugins: {\n            arbitraryLine: {\n                pastBackgroundColor: '#EEEEEE',\n                nowBackgroundColor: '#DDDDDD',\n                hours: {{ dess_hours }}\n            },\n            title: {\n                display: true,\n                text: \"Energy Graph\"\n            }\n        }\n    },\n      plugins: [arbitraryLine]\n    }\n  );\n\n</script>\n<hr />\n\n<h3>Dynamic ESS schedules</h3>\n\n<p>\nThe table shows all inserted Dynamic ESS Schedules.\n</p>\n\n<table class=\"dess-table\">\n  <thead>\n    <tr>\n      <th>Schedule</th>\n      <th>Start</th>\n      <th>Targeted Soc</th>\n      <th>Allow grid feed-in</th>\n      <th>Restrictions</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>#0</td>\n      <td>{{table.0.start}}</td>\n      <td>{{table.0.soc}} %</td>\n      <td>{{table.0.feed_in}}</td>\n      <td>{{table.0.restrictions}}</td>\n    </tr>\n    <tr>\n      <td>#1</td>\n      <td>{{table.1.start}}</td>\n      <td>{{table.1.soc}} %</td>\n      <td>{{table.1.feed_in}}</td>\n      <td>{{table.1.restrictions}}</td>\n    </tr>\n    <tr>\n      <td>#2</td>\n      <td>{{table.2.start}}</td>\n      <td>{{table.2.soc}} %</td>\n      <td>{{table.2.feed_in}}</td>\n      <td>{{table.2.restrictions}}</td>\n    </tr>\n    <tr>\n      <td>#3</td>\n      <td>{{table.3.start}}</td>\n      <td>{{table.3.soc}} %</td>\n      <td>{{table.3.feed_in}}</td>\n      <td>{{table.3.restrictions}}</td>\n    </tr>\n  </tbody>\n</table>\n\n  <hr />\n  Last update: {{ lastValidUpdate }}\n\n  </body>\n</html>",
        "output": "str",
        "x": 880,
        "y": 280,
        "wires": [
            [
                "7c4a51c3a3bb9f4f"
            ]
        ]
    },
    {
        "id": "2297338ce02e1686",
        "type": "template",
        "z": "15669bac1d63a856",
        "g": "1004b1568061f0ed",
        "name": "javascript",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\n     const arbitraryLine = {\n        id: 'arbitraryLine',\n        beforeDraw(chart, args, options){\n            const { \n                ctx, \n                chartArea: { top, right, bottom, left, width, height, margins}, \n                scales: {x, y}\n            } = chart;\n            ctx.save()\n            const d = new Date();\n            let hours = options.hours || 24\n            ctx.strokeStyle = options.nowBackgroundColor\n            ctx.fillStyle = options.nowBackgroundColor\n            let widthNow = (width / hours) * (d.getHours()+1)\n            let offset = ( options.offset || 0) * ( width / (hours * 2) ) - (( options.offset || 0 ) * .5 * (width / (hours * 4)))\n            ctx.fillRect(left + offset, top, widthNow, height)\n            ctx.strokeStyle = options.pastBackgroundColor\n            ctx.fillStyle = options.pastBackgroundColor\n            let widthPast = (width / hours) * (d.getHours())\n            ctx.fillRect(left, top, widthPast + offset, height)\n            ctx.restore()\n            \n        }\n    }\n\n",
        "output": "str",
        "x": 560,
        "y": 320,
        "wires": [
            [
                "adba20b403a6eb54"
            ]
        ]
    },
    {
        "id": "31666843f143a0e7",
        "type": "group",
        "z": "15669bac1d63a856",
        "name": "Schedule 0 - current hour",
        "style": {
            "label": true
        },
        "nodes": [
            "1b211cb97cbecac4",
            "f90ab6a6d70fa6ae",
            "d75fe820bd4079fd",
            "fe69ad8593ad7975",
            "1387f9034e0c4a45",
            "1ff03bc44699398c",
            "34d1354226dd5f95",
            "2138a40c0d853a65",
            "d04f4250560345df",
            "eef880c59622ecc6",
            "0b3daa670ab131ae"
        ],
        "x": 54,
        "y": 419,
        "w": 532,
        "h": 242
    },
    {
        "id": "1b211cb97cbecac4",
        "type": "victron-output-custom",
        "z": "15669bac1d63a856",
        "g": "31666843f143a0e7",
        "service": "com.victronenergy.settings",
        "path": "/Settings/DynamicEss/Schedule/0/Soc",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings"
        },
        "pathObj": {
            "path": "/Settings/DynamicEss/Schedule/0/Soc",
            "name": "/Settings/DynamicEss/Schedule/0/Soc",
            "type": "number"
        },
        "name": "Schedule 0: soc",
        "onlyChanges": false,
        "x": 480,
        "y": 460,
        "wires": []
    },
    {
        "id": "f90ab6a6d70fa6ae",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "31666843f143a0e7",
        "name": "soc",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "soc",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 460,
        "wires": [
            [
                "1b211cb97cbecac4"
            ]
        ]
    },
    {
        "id": "d75fe820bd4079fd",
        "type": "link in",
        "z": "15669bac1d63a856",
        "g": "31666843f143a0e7",
        "name": "schedule 0 - current hour",
        "links": [
            "0a258a4a88409834"
        ],
        "x": 95,
        "y": 520,
        "wires": [
            [
                "f90ab6a6d70fa6ae",
                "1387f9034e0c4a45",
                "34d1354226dd5f95",
                "d04f4250560345df",
                "eef880c59622ecc6"
            ]
        ]
    },
    {
        "id": "fe69ad8593ad7975",
        "type": "victron-output-custom",
        "z": "15669bac1d63a856",
        "g": "31666843f143a0e7",
        "service": "com.victronenergy.settings",
        "path": "/Settings/DynamicEss/Schedule/0/AllowGridFeedIn",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings"
        },
        "pathObj": {
            "path": "/Settings/DynamicEss/Schedule/0/AllowGridFeedIn",
            "name": "/Settings/DynamicEss/Schedule/0/AllowGridFeedIn",
            "type": "number"
        },
        "name": "Schedule 0: feed_in",
        "onlyChanges": false,
        "x": 460,
        "y": 500,
        "wires": []
    },
    {
        "id": "1387f9034e0c4a45",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "31666843f143a0e7",
        "name": "feed_in",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "feed_in",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 500,
        "wires": [
            [
                "fe69ad8593ad7975"
            ]
        ]
    },
    {
        "id": "1ff03bc44699398c",
        "type": "victron-output-custom",
        "z": "15669bac1d63a856",
        "g": "31666843f143a0e7",
        "service": "com.victronenergy.settings",
        "path": "/Settings/DynamicEss/Schedule/0/Start",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings"
        },
        "pathObj": {
            "path": "/Settings/DynamicEss/Schedule/0/Start",
            "name": "/Settings/DynamicEss/Schedule/0/Start",
            "type": "number"
        },
        "name": "Schedule 0: start",
        "onlyChanges": false,
        "x": 470,
        "y": 540,
        "wires": []
    },
    {
        "id": "34d1354226dd5f95",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "31666843f143a0e7",
        "name": "start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "start",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 540,
        "wires": [
            [
                "1ff03bc44699398c"
            ]
        ]
    },
    {
        "id": "2138a40c0d853a65",
        "type": "victron-output-custom",
        "z": "15669bac1d63a856",
        "g": "31666843f143a0e7",
        "service": "com.victronenergy.settings",
        "path": "/Settings/DynamicEss/Schedule/0/Duration",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings"
        },
        "pathObj": {
            "path": "/Settings/DynamicEss/Schedule/0/Duration",
            "name": "/Settings/DynamicEss/Schedule/0/Duration",
            "type": "number"
        },
        "name": "Schedule 0: duration",
        "onlyChanges": false,
        "x": 460,
        "y": 580,
        "wires": []
    },
    {
        "id": "d04f4250560345df",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "31666843f143a0e7",
        "name": "duration",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "duration",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 580,
        "wires": [
            [
                "2138a40c0d853a65"
            ]
        ]
    },
    {
        "id": "eef880c59622ecc6",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "31666843f143a0e7",
        "name": "restrictions",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "restrictions",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 620,
        "wires": [
            [
                "0b3daa670ab131ae"
            ]
        ]
    },
    {
        "id": "0b3daa670ab131ae",
        "type": "victron-output-custom",
        "z": "15669bac1d63a856",
        "g": "31666843f143a0e7",
        "service": "com.victronenergy.settings",
        "path": "/Settings/DynamicEss/Schedule/0/Restrictions",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings"
        },
        "pathObj": {
            "path": "/Settings/DynamicEss/Schedule/0/Restrictions",
            "name": "/Settings/DynamicEss/Schedule/0/Restrictions",
            "type": "number"
        },
        "name": "Schedule 0: restrictions",
        "onlyChanges": false,
        "x": 450,
        "y": 620,
        "wires": []
    },
    {
        "id": "9f4fc8a5250a2ee8",
        "type": "group",
        "z": "15669bac1d63a856",
        "name": "Schedule 1- current hour +1",
        "style": {
            "label": true
        },
        "nodes": [
            "9b627e08518339b4",
            "6df1bed6cf55d8ca",
            "7e361835e40e9612",
            "a61bdb4a43e964b9",
            "d6d96eafa69e3987",
            "1c6d52e74469820e",
            "444c3eeb6bbad97a",
            "778a4c875bedfe12",
            "3a60e9c80c019da7",
            "71d7d6c63225db42",
            "3751c956388100c2"
        ],
        "x": 614,
        "y": 419,
        "w": 532,
        "h": 242
    },
    {
        "id": "9b627e08518339b4",
        "type": "victron-output-custom",
        "z": "15669bac1d63a856",
        "g": "9f4fc8a5250a2ee8",
        "service": "com.victronenergy.settings",
        "path": "/Settings/DynamicEss/Schedule/1/Soc",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings"
        },
        "pathObj": {
            "path": "/Settings/DynamicEss/Schedule/1/Soc",
            "name": "/Settings/DynamicEss/Schedule/1/Soc",
            "type": "number"
        },
        "name": "Schedule 1: soc",
        "onlyChanges": false,
        "x": 1040,
        "y": 460,
        "wires": []
    },
    {
        "id": "6df1bed6cf55d8ca",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "9f4fc8a5250a2ee8",
        "name": "soc",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "soc",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 460,
        "wires": [
            [
                "9b627e08518339b4"
            ]
        ]
    },
    {
        "id": "7e361835e40e9612",
        "type": "link in",
        "z": "15669bac1d63a856",
        "g": "9f4fc8a5250a2ee8",
        "name": "schedule 1 - current hour +1",
        "links": [
            "04be7571633ea6bd"
        ],
        "x": 655,
        "y": 520,
        "wires": [
            [
                "6df1bed6cf55d8ca",
                "d6d96eafa69e3987",
                "444c3eeb6bbad97a",
                "3a60e9c80c019da7",
                "71d7d6c63225db42"
            ]
        ]
    },
    {
        "id": "a61bdb4a43e964b9",
        "type": "victron-output-custom",
        "z": "15669bac1d63a856",
        "g": "9f4fc8a5250a2ee8",
        "service": "com.victronenergy.settings",
        "path": "/Settings/DynamicEss/Schedule/1/AllowGridFeedIn",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings"
        },
        "pathObj": {
            "path": "/Settings/DynamicEss/Schedule/1/AllowGridFeedIn",
            "name": "/Settings/DynamicEss/Schedule/1/AllowGridFeedIn",
            "type": "number"
        },
        "name": "Schedule 1: feed_in",
        "onlyChanges": false,
        "x": 1020,
        "y": 500,
        "wires": []
    },
    {
        "id": "d6d96eafa69e3987",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "9f4fc8a5250a2ee8",
        "name": "feed_in",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "feed_in",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 500,
        "wires": [
            [
                "a61bdb4a43e964b9"
            ]
        ]
    },
    {
        "id": "1c6d52e74469820e",
        "type": "victron-output-custom",
        "z": "15669bac1d63a856",
        "g": "9f4fc8a5250a2ee8",
        "service": "com.victronenergy.settings",
        "path": "/Settings/DynamicEss/Schedule/1/Start",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings"
        },
        "pathObj": {
            "path": "/Settings/DynamicEss/Schedule/1/Start",
            "name": "/Settings/DynamicEss/Schedule/1/Start",
            "type": "number"
        },
        "name": "Schedule 1: start",
        "onlyChanges": false,
        "x": 1030,
        "y": 540,
        "wires": []
    },
    {
        "id": "444c3eeb6bbad97a",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "9f4fc8a5250a2ee8",
        "name": "start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "start",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 540,
        "wires": [
            [
                "1c6d52e74469820e"
            ]
        ]
    },
    {
        "id": "778a4c875bedfe12",
        "type": "victron-output-custom",
        "z": "15669bac1d63a856",
        "g": "9f4fc8a5250a2ee8",
        "service": "com.victronenergy.settings",
        "path": "/Settings/DynamicEss/Schedule/1/Duration",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings"
        },
        "pathObj": {
            "path": "/Settings/DynamicEss/Schedule/1/Duration",
            "name": "/Settings/DynamicEss/Schedule/1/Duration",
            "type": "number"
        },
        "name": "Schedule 1: duration",
        "onlyChanges": false,
        "x": 1020,
        "y": 580,
        "wires": []
    },
    {
        "id": "3a60e9c80c019da7",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "9f4fc8a5250a2ee8",
        "name": "duration",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "duration",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 580,
        "wires": [
            [
                "778a4c875bedfe12"
            ]
        ]
    },
    {
        "id": "71d7d6c63225db42",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "9f4fc8a5250a2ee8",
        "name": "restrictions",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "restrictions",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 620,
        "wires": [
            [
                "3751c956388100c2"
            ]
        ]
    },
    {
        "id": "3751c956388100c2",
        "type": "victron-output-custom",
        "z": "15669bac1d63a856",
        "g": "9f4fc8a5250a2ee8",
        "service": "com.victronenergy.settings",
        "path": "/Settings/DynamicEss/Schedule/1/Restrictions",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings"
        },
        "pathObj": {
            "path": "/Settings/DynamicEss/Schedule/1/Restrictions",
            "name": "/Settings/DynamicEss/Schedule/1/Restrictions",
            "type": "number"
        },
        "name": "Schedule 1: restrictions",
        "onlyChanges": false,
        "x": 1010,
        "y": 620,
        "wires": []
    },
    {
        "id": "eabac8fce9b8c6e4",
        "type": "group",
        "z": "15669bac1d63a856",
        "name": "Schedule 2 - current hour +2",
        "style": {
            "label": true
        },
        "nodes": [
            "6325f30b87558fe6",
            "bb7b28143547f785",
            "85d9b1f2d1083440",
            "2d8c4c32e30be3aa",
            "0e23869336be3816",
            "7477908889e00c8d",
            "96e138a3dab9c502",
            "d0bdea3f255e044e",
            "3b7aaca2ee81b85d",
            "73349aac2c86abba",
            "22eb20c6ef3a740b"
        ],
        "x": 54,
        "y": 679,
        "w": 532,
        "h": 242
    },
    {
        "id": "6325f30b87558fe6",
        "type": "victron-output-custom",
        "z": "15669bac1d63a856",
        "g": "eabac8fce9b8c6e4",
        "service": "com.victronenergy.settings",
        "path": "/Settings/DynamicEss/Schedule/2/Soc",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings"
        },
        "pathObj": {
            "path": "/Settings/DynamicEss/Schedule/2/Soc",
            "name": "/Settings/DynamicEss/Schedule/2/Soc",
            "type": "number"
        },
        "name": "Schedule 2: soc",
        "onlyChanges": false,
        "x": 480,
        "y": 720,
        "wires": []
    },
    {
        "id": "bb7b28143547f785",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "eabac8fce9b8c6e4",
        "name": "soc",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "soc",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 720,
        "wires": [
            [
                "6325f30b87558fe6"
            ]
        ]
    },
    {
        "id": "85d9b1f2d1083440",
        "type": "link in",
        "z": "15669bac1d63a856",
        "g": "eabac8fce9b8c6e4",
        "name": "schedule 2 - current hour +2",
        "links": [
            "d653e0ee49164bd1"
        ],
        "x": 95,
        "y": 780,
        "wires": [
            [
                "bb7b28143547f785",
                "0e23869336be3816",
                "96e138a3dab9c502",
                "3b7aaca2ee81b85d",
                "73349aac2c86abba"
            ]
        ]
    },
    {
        "id": "2d8c4c32e30be3aa",
        "type": "victron-output-custom",
        "z": "15669bac1d63a856",
        "g": "eabac8fce9b8c6e4",
        "service": "com.victronenergy.settings",
        "path": "/Settings/DynamicEss/Schedule/2/AllowGridFeedIn",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings"
        },
        "pathObj": {
            "path": "/Settings/DynamicEss/Schedule/2/AllowGridFeedIn",
            "name": "/Settings/DynamicEss/Schedule/2/AllowGridFeedIn",
            "type": "number"
        },
        "name": "Schedule 2: feed_in",
        "onlyChanges": false,
        "x": 460,
        "y": 760,
        "wires": []
    },
    {
        "id": "0e23869336be3816",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "eabac8fce9b8c6e4",
        "name": "feed_in",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "feed_in",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 760,
        "wires": [
            [
                "2d8c4c32e30be3aa"
            ]
        ]
    },
    {
        "id": "7477908889e00c8d",
        "type": "victron-output-custom",
        "z": "15669bac1d63a856",
        "g": "eabac8fce9b8c6e4",
        "service": "com.victronenergy.settings",
        "path": "/Settings/DynamicEss/Schedule/2/Start",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings"
        },
        "pathObj": {
            "path": "/Settings/DynamicEss/Schedule/2/Start",
            "name": "/Settings/DynamicEss/Schedule/2/Start",
            "type": "number"
        },
        "name": "Schedule 2: start",
        "onlyChanges": false,
        "x": 470,
        "y": 800,
        "wires": []
    },
    {
        "id": "96e138a3dab9c502",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "eabac8fce9b8c6e4",
        "name": "start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "start",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 800,
        "wires": [
            [
                "7477908889e00c8d"
            ]
        ]
    },
    {
        "id": "d0bdea3f255e044e",
        "type": "victron-output-custom",
        "z": "15669bac1d63a856",
        "g": "eabac8fce9b8c6e4",
        "service": "com.victronenergy.settings",
        "path": "/Settings/DynamicEss/Schedule/2/Duration",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings"
        },
        "pathObj": {
            "path": "/Settings/DynamicEss/Schedule/2/Duration",
            "name": "/Settings/DynamicEss/Schedule/2/Duration",
            "type": "number"
        },
        "name": "Schedule 2: duration",
        "onlyChanges": false,
        "x": 460,
        "y": 840,
        "wires": []
    },
    {
        "id": "3b7aaca2ee81b85d",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "eabac8fce9b8c6e4",
        "name": "duration",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "duration",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 840,
        "wires": [
            [
                "d0bdea3f255e044e"
            ]
        ]
    },
    {
        "id": "73349aac2c86abba",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "eabac8fce9b8c6e4",
        "name": "restrictions",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "restrictions",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 880,
        "wires": [
            [
                "22eb20c6ef3a740b"
            ]
        ]
    },
    {
        "id": "22eb20c6ef3a740b",
        "type": "victron-output-custom",
        "z": "15669bac1d63a856",
        "g": "eabac8fce9b8c6e4",
        "service": "com.victronenergy.settings",
        "path": "/Settings/DynamicEss/Schedule/2/Restrictions",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings"
        },
        "pathObj": {
            "path": "/Settings/DynamicEss/Schedule/2/Restrictions",
            "name": "/Settings/DynamicEss/Schedule/2/Restrictions",
            "type": "number"
        },
        "name": "Schedule 2: restrictions",
        "onlyChanges": false,
        "x": 450,
        "y": 880,
        "wires": []
    },
    {
        "id": "f35b948115912674",
        "type": "group",
        "z": "15669bac1d63a856",
        "name": "Schedule 3- current hour +3",
        "style": {
            "label": true
        },
        "nodes": [
            "a392a73071eb1578",
            "831d966acf56f051",
            "67ab1cc124f6edbc",
            "f4ca0ebe16663404",
            "34f841db18949c98",
            "f9659649dcbb426a",
            "3698ac3c3b336c9d",
            "feb57592303852a7",
            "cfcf8015ad844a30",
            "0e19f95e7be5ac40",
            "cab1688cbd00424b"
        ],
        "x": 614,
        "y": 679,
        "w": 532,
        "h": 242
    },
    {
        "id": "a392a73071eb1578",
        "type": "victron-output-custom",
        "z": "15669bac1d63a856",
        "g": "f35b948115912674",
        "service": "com.victronenergy.settings",
        "path": "/Settings/DynamicEss/Schedule/3/Soc",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings"
        },
        "pathObj": {
            "path": "/Settings/DynamicEss/Schedule/3/Soc",
            "name": "/Settings/DynamicEss/Schedule/3/Soc",
            "type": "number"
        },
        "name": "Schedule 3: soc",
        "onlyChanges": false,
        "x": 1040,
        "y": 720,
        "wires": []
    },
    {
        "id": "831d966acf56f051",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "f35b948115912674",
        "name": "soc",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "soc",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 720,
        "wires": [
            [
                "a392a73071eb1578"
            ]
        ]
    },
    {
        "id": "67ab1cc124f6edbc",
        "type": "link in",
        "z": "15669bac1d63a856",
        "g": "f35b948115912674",
        "name": "schedule 3 - current hour +3",
        "links": [
            "b7244f77487893f6"
        ],
        "x": 655,
        "y": 780,
        "wires": [
            [
                "831d966acf56f051",
                "34f841db18949c98",
                "3698ac3c3b336c9d",
                "cfcf8015ad844a30",
                "cab1688cbd00424b"
            ]
        ]
    },
    {
        "id": "f4ca0ebe16663404",
        "type": "victron-output-custom",
        "z": "15669bac1d63a856",
        "g": "f35b948115912674",
        "service": "com.victronenergy.settings",
        "path": "/Settings/DynamicEss/Schedule/3/AllowGridFeedIn",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings"
        },
        "pathObj": {
            "path": "/Settings/DynamicEss/Schedule/3/AllowGridFeedIn",
            "name": "/Settings/DynamicEss/Schedule/3/AllowGridFeedIn",
            "type": "number"
        },
        "name": "Schedule 3: feed_in",
        "onlyChanges": false,
        "x": 1020,
        "y": 760,
        "wires": []
    },
    {
        "id": "34f841db18949c98",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "f35b948115912674",
        "name": "feed_in",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "feed_in",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 760,
        "wires": [
            [
                "f4ca0ebe16663404"
            ]
        ]
    },
    {
        "id": "f9659649dcbb426a",
        "type": "victron-output-custom",
        "z": "15669bac1d63a856",
        "g": "f35b948115912674",
        "service": "com.victronenergy.settings",
        "path": "/Settings/DynamicEss/Schedule/3/Start",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings"
        },
        "pathObj": {
            "path": "/Settings/DynamicEss/Schedule/3/Start",
            "name": "/Settings/DynamicEss/Schedule/3/Start",
            "type": "number"
        },
        "name": "Schedule 3: start",
        "onlyChanges": false,
        "x": 1030,
        "y": 800,
        "wires": []
    },
    {
        "id": "3698ac3c3b336c9d",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "f35b948115912674",
        "name": "start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "start",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 800,
        "wires": [
            [
                "f9659649dcbb426a"
            ]
        ]
    },
    {
        "id": "feb57592303852a7",
        "type": "victron-output-custom",
        "z": "15669bac1d63a856",
        "g": "f35b948115912674",
        "service": "com.victronenergy.settings",
        "path": "/Settings/DynamicEss/Schedule/3/Duration",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings"
        },
        "pathObj": {
            "path": "/Settings/DynamicEss/Schedule/3/Duration",
            "name": "/Settings/DynamicEss/Schedule/3/Duration",
            "type": "number"
        },
        "name": "Schedule 3: duration",
        "onlyChanges": false,
        "x": 1020,
        "y": 840,
        "wires": []
    },
    {
        "id": "cfcf8015ad844a30",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "f35b948115912674",
        "name": "duration",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "duration",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 840,
        "wires": [
            [
                "feb57592303852a7"
            ]
        ]
    },
    {
        "id": "0e19f95e7be5ac40",
        "type": "victron-output-custom",
        "z": "15669bac1d63a856",
        "g": "f35b948115912674",
        "service": "com.victronenergy.settings",
        "path": "/Settings/DynamicEss/Schedule/3/Restrictions",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings"
        },
        "pathObj": {
            "path": "/Settings/DynamicEss/Schedule/3/Restrictions",
            "name": "/Settings/DynamicEss/Schedule/3/Restrictions",
            "type": "number"
        },
        "name": "Schedule 3: restrictions",
        "onlyChanges": false,
        "x": 1010,
        "y": 880,
        "wires": []
    },
    {
        "id": "cab1688cbd00424b",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "f35b948115912674",
        "name": "restrictions",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "restrictions",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 880,
        "wires": [
            [
                "0e19f95e7be5ac40"
            ]
        ]
    },
    {
        "id": "11c0695b7819894f",
        "type": "group",
        "z": "15669bac1d63a856",
        "name": "Store battery capacity",
        "style": {
            "label": true
        },
        "nodes": [
            "e9a9bebc9c4732d0",
            "b48a8f507e14330a",
            "b68ffdbbf4152cf3",
            "8d723ea6a3f644bc"
        ],
        "x": 54,
        "y": 939,
        "w": 1092,
        "h": 82
    },
    {
        "id": "e9a9bebc9c4732d0",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "11c0695b7819894f",
        "name": "battery capacity",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dess.options.b_max",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 980,
        "wires": [
            [
                "b68ffdbbf4152cf3"
            ]
        ]
    },
    {
        "id": "b48a8f507e14330a",
        "type": "victron-output-custom",
        "z": "15669bac1d63a856",
        "g": "11c0695b7819894f",
        "service": "com.victronenergy.settings",
        "path": "/Settings/DynamicEss/BatteryCapacity",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings"
        },
        "pathObj": {
            "path": "/Settings/DynamicEss/BatteryCapacity",
            "name": "/Settings/DynamicEss/BatteryCapacity",
            "type": "number"
        },
        "name": "",
        "onlyChanges": false,
        "x": 880,
        "y": 980,
        "wires": []
    },
    {
        "id": "b68ffdbbf4152cf3",
        "type": "change",
        "z": "15669bac1d63a856",
        "g": "11c0695b7819894f",
        "name": "to number",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 980,
        "wires": [
            [
                "b48a8f507e14330a"
            ]
        ]
    },
    {
        "id": "8d723ea6a3f644bc",
        "type": "link in",
        "z": "15669bac1d63a856",
        "g": "11c0695b7819894f",
        "name": "link in 1",
        "links": [
            "0a258a4a88409834",
            "fa866313f9c8bebf"
        ],
        "x": 95,
        "y": 980,
        "wires": [
            [
                "e9a9bebc9c4732d0"
            ]
        ]
    }
]
